version: '3.8'

services:
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - "8100:8080"
    command: ["start-dev"]
    networks:
      - kong-net

  kong-database:
    image: postgres:13
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    ports:
      - "5433:5432"
    networks:
      - kong-net

  kong-migrations:
    image: my-kong-image:latest
    command: >
      /bin/sh -c "
        until nc -z kong-database 5432; do
          echo 'Waiting for PostgreSQL to become available...';
          sleep 1;
        done;
        kong migrations bootstrap;
        kong migrations up;
        kong migrations finish;"
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: kong-database
      KONG_PG_PASSWORD: kong
      KONG_PG_USER: kong
    depends_on:
      - kong-database
    networks:
      - kong-net
  kong:
    image: my-kong-image:latest
    command: "/bin/sh -c 'kong migrations bootstrap && kong start'"
    container_name: kong
    depends_on:
      - kong-migrations
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
    ports:
      - "8002:8000"  # Proxy listener port
      - "8001:8001"  # Admin API port
      - "8443:8443"  # SSL proxy listener port
      - "8444:8444"  # SSL Admin API port
    environment:
      KONG_DATABASE:         postgres
      KONG_PG_HOST:          kong-database
      KONG_PG_PORT:          5432
      KONG_PG_DATABASE:      kong
      KONG_PG_USER:          kong
      KONG_PG_PASSWORD:      kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG:  /dev/stderr
      KONG_ADMIN_ERROR_LOG:  /dev/stderr
      KONG_PROXY_LISTEN:     0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_ADMIN_LISTEN:     0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_PLUGINS:          bundled,oidc
      KONG_LOG_LEVEL:        debug
    networks:
      - kong-net

  django:
    build: .
    image: my-kong-image:latest
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    working_dir: /code
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_DB=kong
      - POSTGRES_USER=kong
      - POSTGRES_PASSWORD=kong
      - POSTGRES_HOST=kong-database
      - POSTGRES_PORT=5432
    networks:
      - kong-net

networks:
  kong-net:
    driver: bridge






